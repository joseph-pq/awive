[project]
name = "awive"
version = "3.0.4"
description = "Adaptive Water Image Velocimetry"
authors = [{ name = "Joseph P.", email = "joseph.pena.q@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.26,<1.27",
    "opencv-python>=4.6,<4.7",
    "pydantic>=2.7.4",
]

[dependency-groups]
dev = [
    "dvc-gdrive>=3.0.1",
    "ipython>=8.18.1",
    "pyfzf>=0.3.1",
    "requests>=2.31.0",
    {include-group = "test"},
    {include-group = "plots"},
    {include-group = "stubs"},
    {include-group = "docs"},
]
test = [
    "pytest-cov>=6.1.1",
    "pytest>=8.3.5",
]
stubs = [
    "opencv-stubs>=0.0.11",
    "typer>=0.15.2",
    "types-pyyaml>=6.0.12.20241230",
    "types-requests>=2.31.0.20240125",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.34",
    "mkdocstrings-python>=1.11.1",
]
plots = [
    "pyqt5>=5.15.11",
    "tk>=0.1.0",
    "matplotlib>=3.9.2",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
    "A",    # see: https://pypi.org/project/flake8-builtins
    "ANN",  # flake8-annotations (for type hints in signatures)
    "B",    # see: https://pypi.org/project/flake8-bugbear
    "C4",   # see: https://pypi.org/project/flake8-comprehensions
    "D",    # pydocstyle (for docstring conventions like missing args/raises)
    "E",    # pycodestyle errors
    "EXE",  # see: https://pypi.org/project/flake8-executable
    "I",    # isort
    "ISC",  # see: https://pypi.org/project/flake8-implicit-str-concat
    "N",    # pep8-naming
    "PERF", # perflint
    "PLC",  # Pylint convention
    "PLE",  # Pylint error
    "PLW",  # Pylint warning
    "PT",   # see: https://pypi.org/project/flake8-pytest-style
    "Q",    # see: https://pypi.org/project/flake8-quotes
    "RET",  # see: https://pypi.org/project/flake8-return
    "RUF",  # Ruff-specific rules
    "SIM",  # see: https://pypi.org/project/flake8-simplify
    "TID",  # see: https://pypi.org/project/flake8-tidy-imports/
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]
ignore = [
    # --- Annotation Rules ---
    # Do not require type hints for *args and **kwargs
    "ANN002",
    "ANN003",
    # Allow use of Any type
    "ANN401",

    # --- Docstring Rules ---
    # Do not require docstrings in modules, packages, or __init__
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__

    # --- Other Rules ---
    # Allow use of assert
    "S101",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.docformatter]
recursive = true
wrap-summaries=72
wrap-descriptions=72

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79

[tool.pytest.ini_options]
testpaths = "tests"
log_cli = false
log_cli_level = "INFO"
log_level = "DEBUG"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_format = "%(asctime)s [%(levelname)8s] %(message)s"
addopts = "-p no:warnings"
