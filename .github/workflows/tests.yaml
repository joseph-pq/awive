name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Cache a directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Install the project
        run: |
          uv sync --all-extras --all-groups
          uv pip install ruff

  pytest:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Cache a directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Test with pytest
        run: uv run pytest


  code-coverage:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Cache a directory
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('uv.lock') }}

      - name: Run tests and collect coverage
        # Explicitly point to pyproject.toml to work around a `coverage` limitation where child processes created by
        # tests do not inherit the coverage configuration from pyproject.toml if it is discovered implicitly, i.e. not
        # specified on the command line.
        # Limitation is described here: https://github.com/nedbat/coveragepy/issues/512
        run: uv run --no-sync pytest --cov=awive --cov-report=xml --cov-config=pyproject.toml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
